// <auto-generated />
using System;
using Alloca8._2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Alloca8._2.Migrations
{
    [DbContext(typeof(Alloca8DbContext))]
    [Migration("20250310123926_Initial Migration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Alloca8._2.Models.Entities.Bookings", b =>
                {
                    b.Property<Guid>("BookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HotelID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HotelsHotelID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RoomsRoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UsersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BookingID");

                    b.HasIndex("HotelsHotelID");

                    b.HasIndex("RoomsRoomID");

                    b.HasIndex("UsersId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Alloca8._2.Models.Entities.HotelImages", b =>
                {
                    b.Property<int>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageID"));

                    b.Property<int>("HotelID")
                        .HasColumnType("int");

                    b.Property<Guid?>("HotelsHotelID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<Guid?>("RoomsRoomID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ImageID");

                    b.HasIndex("HotelsHotelID");

                    b.HasIndex("RoomsRoomID");

                    b.ToTable("HotelImagees");
                });

            modelBuilder.Entity("Alloca8._2.Models.Entities.Hotels", b =>
                {
                    b.Property<Guid>("HotelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("HotelOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("StarRating")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("HotelID");

                    b.HasIndex("HotelOwnerId");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("Alloca8._2.Models.Entities.Payments", b =>
                {
                    b.Property<Guid>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("BookingID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BookingsBookingID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Method")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UsersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PaymentID");

                    b.HasIndex("BookingsBookingID");

                    b.HasIndex("UsersId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Alloca8._2.Models.Entities.Reviews", b =>
                {
                    b.Property<Guid>("ReviewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HotelID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HotelsHotelID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UsersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ReviewID");

                    b.HasIndex("HotelsHotelID");

                    b.HasIndex("UsersId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Alloca8._2.Models.Entities.Rooms", b =>
                {
                    b.Property<Guid>("RoomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Availability")
                        .HasColumnType("bit");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<Guid>("HotelID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomID");

                    b.HasIndex("HotelID");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Alloca8._2.Models.Entities.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Alloca8._2.Models.Entities.Bookings", b =>
                {
                    b.HasOne("Alloca8._2.Models.Entities.Hotels", "Hotels")
                        .WithMany()
                        .HasForeignKey("HotelsHotelID");

                    b.HasOne("Alloca8._2.Models.Entities.Rooms", "Rooms")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomsRoomID");

                    b.HasOne("Alloca8._2.Models.Entities.Users", "Users")
                        .WithMany("Bookings")
                        .HasForeignKey("UsersId");

                    b.Navigation("Hotels");

                    b.Navigation("Rooms");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Alloca8._2.Models.Entities.HotelImages", b =>
                {
                    b.HasOne("Alloca8._2.Models.Entities.Hotels", "Hotels")
                        .WithMany("HotelImages")
                        .HasForeignKey("HotelsHotelID");

                    b.HasOne("Alloca8._2.Models.Entities.Rooms", "Rooms")
                        .WithMany()
                        .HasForeignKey("RoomsRoomID");

                    b.Navigation("Hotels");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Alloca8._2.Models.Entities.Hotels", b =>
                {
                    b.HasOne("Alloca8._2.Models.Entities.Users", "HotelOwner")
                        .WithMany("Hotels")
                        .HasForeignKey("HotelOwnerId");

                    b.Navigation("HotelOwner");
                });

            modelBuilder.Entity("Alloca8._2.Models.Entities.Payments", b =>
                {
                    b.HasOne("Alloca8._2.Models.Entities.Bookings", "Bookings")
                        .WithMany("Payments")
                        .HasForeignKey("BookingsBookingID");

                    b.HasOne("Alloca8._2.Models.Entities.Users", "Users")
                        .WithMany("Payments")
                        .HasForeignKey("UsersId");

                    b.Navigation("Bookings");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Alloca8._2.Models.Entities.Reviews", b =>
                {
                    b.HasOne("Alloca8._2.Models.Entities.Hotels", "Hotels")
                        .WithMany("Reviews")
                        .HasForeignKey("HotelsHotelID");

                    b.HasOne("Alloca8._2.Models.Entities.Users", "Users")
                        .WithMany("Reviews")
                        .HasForeignKey("UsersId");

                    b.Navigation("Hotels");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Alloca8._2.Models.Entities.Rooms", b =>
                {
                    b.HasOne("Alloca8._2.Models.Entities.Hotels", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Alloca8._2.Models.Entities.Bookings", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Alloca8._2.Models.Entities.Hotels", b =>
                {
                    b.Navigation("HotelImages");

                    b.Navigation("Reviews");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Alloca8._2.Models.Entities.Rooms", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Alloca8._2.Models.Entities.Users", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Hotels");

                    b.Navigation("Payments");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
